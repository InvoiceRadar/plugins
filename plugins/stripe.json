{
  "$schema": "https://raw.githubusercontent.com/invoiceradar/plugins/main/schema.json",
  "id": "stripe",
  "name": "Stripe",
  "description": "Stripe is a payment processor. Collect outgoing invoices",
  "homepage": "https://stripe.com",
  "configSchema": {
    "accountId": {
      "type": "string",
      "title": "Stripe Account ID",
      "description": "The ID of the Stripe account to use.",
      "example": "acct_1234567890",
      "required": true
    }
  },
  "checkAuth": [
    {
      "action": "navigate",
      "url": "https://dashboard.stripe.com",
      "waitForNetworkIdle": true
    },
    {
      "action": "checkElementExists",
      "selector": "[data-testid='world-root']"
    }
  ],
  "startAuth": [
    {
      "action": "navigate",
      "url": "https://dashboard.stripe.com/login"
    },
    {
      "action": "waitForElement",
      "selector": "[data-testid='world-root']"
    }
  ],
  "getConfigOptions": [
    {
      "action": "navigate",
      "url": "https://dashboard.stripe.com",
      "waitForNetworkIdle": true
    },
    {
      "action": "extractAll",
      "variable": "option",
      "script": "fetch(\n  'https://dashboard.stripe.com/ajax/current_user_retrieve?include_only%5B%5D=id%2Cmerchants.token%2Cmerchants.nickname%2Cmerchants.has_atlas%2Cobject',\n  {\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/x-www-form-urlencoded',\n      'stripe-livemode': 'true',\n      'stripe-version': '2023-08-16',\n      'x-request-source':\n        'service=\"manage-srv\"; project=\"dashboard_default\"; operation=\"SettingsOverviewQuery\"; component=\"<unknown>\"',\n      'x-requested-with': 'XMLHttpRequest',\n      'x-stripe-csrf-token': window.PRELOADED.csrf_token,\n    },\n    referrer: 'https://dashboard.stripe.com/dashboard',\n    referrerPolicy: 'strict-origin-when-cross-origin',\n    body: null,\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n  },\n)\n  .then((r) => r.json())\n  .then((r) =>\n    r.merchants.map((m) => ({\n      label: m.nickname,\n      value: m.token,\n    })),\n  )",
      "forEach": [
        {
          "action": "exposeOption",
          "config": "accountId",
          "option": "{{option}}"
        }
      ]
    }
  ],
  "getDocuments": [
    {
      "action": "navigate",
      "url": "https://dashboard.stripe.com/invoices",
      "waitForNetworkIdle": true
    },
    {
      "action": "extractAll",
      "script": "fetch(\n  'https://dashboard.stripe.com/v1/invoices?expand%5B%5D=data.test_clock&expand%5B%5D=data.owning_merchant_info&expand%5B%5D=data.customer&expand%5B%5D=data.revisability&include_only%5B%5D=data.id%2Chas_more%2Cdata.object%2Cdata.deleted%2Cdata.total%2Cdata.currency%2Cdata.test_clock.id%2Cdata.test_clock.frozen_time%2Cdata.test_clock.object%2Cdata.collection_method%2Cdata.attempted%2Cdata.subscription_status%2Cdata.next_payment_attempt%2Cdata.payment_pending%2Cdata.status%2Cdata.scheduled_payment.created%2Cdata.scheduled_payment.estimated_payment_arrival_date%2Cdata.scheduled_payment.payment_execution_date%2Cdata.paid%2Cdata.amount_paid%2Cdata.amount_remaining%2Cdata.has_partial_payments%2Cdata.has_paid_non_default_payment%2Cdata.amounts_due.due_date%2Cdata.amounts_due.status%2Cdata.due_date%2Cdata.send_next_confirmation_reminder_at%2Cdata.auto_advance%2Cdata.amounts_due.description%2Cdata.attempt_count%2Cdata.closed_for%2Cdata.subscription%2Cdata.subscription_pause_collection.behavior%2Cdata.dispute_status%2Cdata.amount_due%2Cdata.refund_status%2Cdata.test_clock%2Cdata.automatically_finalizes_at%2Cdata.applied_balance%2Cdata.created%2Cdata.customer_description%2Cdata.customer_email%2Cdata.prebilling_data.iterations%2Cdata.prebilling_data.subscription_schedule%2Cdata.number%2Cdata.billing_reason%2Cdata.customer_metadata%2Cdata.livemode%2Cdata.owning_merchant_info.id%2Cdata.owning_merchant_info.country%2Cdata.owning_merchant_info.name%2Cdata.owning_merchant_info.compartment_name%2Cdata.customer.id%2Cdata.customer.object%2Cdata.customer.shipping.address.city%2Cdata.customer.shipping.address.country%2Cdata.customer.shipping.address.line1%2Cdata.customer.shipping.address.line2%2Cdata.customer.shipping.address.postal_code%2Cdata.customer.shipping.address.state%2Cdata.customer.deleted%2Cdata.customer_address.city%2Cdata.customer_address.country%2Cdata.customer_address.line1%2Cdata.customer_address.line2%2Cdata.customer_address.postal_code%2Cdata.customer_address.state%2Cdata.customer_name%2Cdata.customer_phone%2Cdata.customer_shipping.address.city%2Cdata.customer_shipping.address.country%2Cdata.customer_shipping.address.line1%2Cdata.customer_shipping.address.line2%2Cdata.customer_shipping.address.postal_code%2Cdata.customer_shipping.address.state%2Cdata.customer_shipping.name%2Cdata.customer_tax_exempt%2Cdata.charge%2Cdata.receipt_number%2Cdata.secret%2Cdata.owning_merchant%2Cdata.redaction.status%2Cdata.revisability%2Cdata.metadata&count_limit=10000&starting_after=in_1QVBNVLfU4QizRMMdedZNyOw&limit=500',\n  {\n    cache: 'default',\n    credentials: 'include',\n    headers: {\n      accept: 'application/json',\n      'content-type': 'application/x-www-form-urlencoded',\n      'stripe-livemode': 'true',\n      'stripe-version': '2023-08-16',\n      'x-request-source':\n        'service=\"manage-srv\"; project=\"bmx\"; operation=\"BentoInvoicesTableListQuery\"; component=\"<unknown>\"',\n      'x-requested-with': 'XMLHttpRequest',\n      'stripe-account': '{{config.accountId}}',\n      authorization: 'Bearer ' + window.PRELOADED.session_api_key,\n      'x-stripe-csrf-token': window.PRELOADED.csrf_token,\n      'x-stripe-manage-client-revision': window.currentHead,\n    },\n    method: 'GET',\n    mode: 'cors',\n    redirect: 'follow',\n    referrer: 'https://dashboard.stripe.com/invoices',\n    referrerPolicy: 'strict-origin-when-cross-origin',\n  },\n)\n  .then((r) => r.json())\n  .then((r) =>\n    r.data.map((d) => ({\n      ...d,\n      createdAt: new Date(d.created * 1000),\n      total: d.total / 100,\n    })),\n  )",
      "variable": "invoice",
      "forEach": [
        {
          "action": "extract",
          "variable": "pdfUrl",
          "script": "fetch(\n  'https://dashboard.stripe.com/invoice/{{config.accountId}}/{{invoice.secret}}/pdf_file_url',\n  {\n    headers: {\n      accept: 'text/html, */*; q=0.01',\n      'accept-language': 'en-US,de-AT',\n      priority: 'u=1, i',\n      'sec-ch-ua': '\"Not?A_Brand\";v=\"99\", \"Chromium\";v=\"130\"',\n      'sec-ch-ua-mobile': '?0',\n      'sec-ch-ua-platform': '\"macOS\"',\n      'sec-fetch-dest': 'empty',\n      'sec-fetch-mode': 'cors',\n      'sec-fetch-site': 'same-origin',\n      'stripe-livemode': 'true',\n      'stripe-version': '2023-08-16',\n      'x-page-load-id': 'e7646014-3ccb-4edb-8019-f1fc952e8a9b',\n      'x-requested-with': 'XMLHttpRequest',\n      authorization: 'Bearer ' + window.PRELOADED.session_api_key,\n      'x-stripe-csrf-token': window.PRELOADED.csrf_token,\n      'x-stripe-manage-client-revision': window.currentHead,\n    },\n    referrer: 'https://dashboard.stripe.com/invoices',\n    referrerPolicy: 'strict-origin-when-cross-origin',\n    body: null,\n    method: 'GET',\n    mode: 'cors',\n    credentials: 'include',\n  },\n).then((r) => r.json())"
        },
        {
          "action": "downloadPdf",
          "url": "{{pdfUrl.file_url}}",
          "document": {
            "type": "outgoing_invoice",
            "id": "{{invoice.number}}",
            "date": "{{invoice.createdAt}}",
            "total": "{{invoice.total}} {{invoice.currency}}"
          },
          "metadata": {
            "customerId": "{{invoice.customer.id}}",
            "customerEmail": "{{invoice.customer_email}}"
          }
        }
      ]
    }
  ]
}
